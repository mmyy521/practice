/*给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 
回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

例如，121 是回文，而 123 不是。

示例 1：

输入：x = 121
输出：true
示例 2：

输入：x = -121
输出：false
解释：从左向右读, 为 - 121 。 从右向左读, 为 121 - 。因此它不是一个回文数。
示例 3：

输入：x = 10
输出：false
解释：从右向左读, 为 01 。因此它不是一个回文数。
先把数字转换成字符串，再将字符串两头对比
*/
#include<iostream>
#include <string>
#include <sstream>
using namespace std;

class Solution {
public:
    bool isPalindrome(int x) {
        string str = to_string(x);
        int n = str.length();
        // 交换对称位置的字符
        for (int i = 0; i < n / 2; i++) {
            if (str[i]!= str[n - i - 1])
            {
                return false;
            }
        }
        return true;
    }
};
//int main()
//{
//    int x = 121;
//    Solution solution;
//    bool yes = solution.isPalindrome(x);
//    cout << yes;
//	return 0;
//}
